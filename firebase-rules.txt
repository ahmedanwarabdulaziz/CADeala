// Updated Firebase Security Rules for CADeala Gift App
// Include permissions for customerRanks collection

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow authenticated users to read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Admins can read and write all users
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      // Business owners can read all users (they'll filter client-side for their customers)
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Business';
    }
    
    // Allow collection-level read access for users collection
    match /users {
      // Admins can list all users
      allow list: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      // Business owners can list users (they'll filter client-side)
      allow list: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Business';
    }
    
    // Categories collections - allow authenticated users to read/write
    match /industries/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /businessTypes/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /serviceCategories/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /productCategories/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Serving areas - allow authenticated users to read/write
    match /servingAreas/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Tag categories - allow authenticated users to read/write
    match /tagCategories/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Tags - allow authenticated users to read/write
    match /tags/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Business registrations - allow authenticated users to read/write
    match /businessRegistrations/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Business applications - allow users to read/write their own applications
    match /businessApplications/{document} {
      // Users can read/write their own applications
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Admins can read/write all applications
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Customer ranks - allow business owners to manage their own ranks
    match /customerRanks/{document} {
      // Allow read for all users (including anonymous for signup validation)
      allow read: if true;
      
      // Allow business owners to create their own ranks
      allow create: if request.auth != null && 
        request.resource.data.businessId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.businessId;
      
      // Allow business owners to update/delete their own ranks
      allow update, delete: if request.auth != null && 
        resource.data.businessId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.businessId;
      
      // Allow admins to manage all ranks
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
  }
}